/* 
 * File:   main.c
 * Author: Kevin
 *
 * Created on October 3, 2015, 9:51 AM
 */

#include <stdio.h>
#include <stdlib.h>
#include<string.h>

/*Q4
 * convert sparse vectors(mostly 0) into 2 efficient vectors, pos[] and val[]
 * and vice versa
 */
void efficient( const int source[], int val[], int pos[], int size);// size=source size
void reconstruct( int source[], int m, const int val[], const int pos[], int n) ;
// m=size of source , n=size of val & pos

void efficient( const int source[], int val[], int pos[], int size){
    int i,j=0;
    for(i=0;i<size;i++){
        //printf("%d ----- %d\n",i,source[i]);
        if(source[i]!=0){
            val[j]=source[i];
            pos[j]=i;
            j++; // j  used for different indexing of source compared to val,pos
        }
    }
}
void reconstruct( int source[], int m, const int val[], const int pos[], int n){
    int i,j;
    for(i=0;i<m;i++)
        source[i]=0;
    for(j=0;j<n;j++)
        source[pos[j]]=val[j];
}
int main(int argc, char** argv) {
    int x[11]={0,0,2,3,4,0,0,7,91,0,0};
    int __val[5];
    int __pos[5];
    efficient(x,__val,__pos,11);
    
    

    int k;    //PRINTING
    for(k=0;k<5;k++)
        printf("pos[%d]:%d -----val[%d]:%d \n",k,__pos[k],k,__val[k]);
    
    
    int z[3]={0,2,5};//pos
    int y[3]={4,6,12};//val
    int w[7];
    reconstruct(w,7,y,z,3);

    int c;
    for(c=0;c<7;c++)
        printf("w[%d]: %d\n",c,w[c]);

    return (EXIT_SUCCESS);
}

